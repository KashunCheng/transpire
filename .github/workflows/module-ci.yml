name: Transpire Module CI

on:
  workflow_call:
    inputs:
      module_name:
        required: true
        type: string
    secrets:
      HARBOR_USERNAME:
        required: true
      HARBOR_PASSWORD:
        required: true
      OCF_CLUSTER_DEPLOY_KEY:
        required: true

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    container: harbor.ocf.berkeley.edu/ocf/transpire/transpire:latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ocf/kubernetes
      - id: set-matrix
        run: transpire image build ${{ inputs.module_name }} -o gha
    outputs:
      image_matrix: ${{ steps.set-matrix.outputs.image_matrix }}

  build-images:
    needs: build-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ${{ fromJson(needs.build-matrix.outputs.image_matrix) }}
    steps:
      - uses: docker/setup-buildx-action@v2

      - uses: docker/login-action@v2
        with:
          registry: harbor.ocf.berkeley.edu
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.image.context }}
          push: true
          tags: ${{ join(matrix.image.tags) }}
          labels: ${{ join(matrix.image.labels) }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-cluster:
    needs: build-images
    runs-on: ubuntu-latest
    container: harbor.ocf.berkeley.edu/ocf/transpire/transpire:latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ocf/kubernetes

      - name: Build cluster repository
        run: transpire object build _out

      - name: Push cluster repository
        run: |
          mkdir $HOME/.ssh
          echo "${{ secrets.OCF_CLUSTER_DEPLOY_KEY }}" > $HOME/.ssh/deploy_key
          chmod 600 $HOME/.ssh/deploy_key
          ssh-keyscan -H github.com > $HOME/.ssh/known_hosts
          export GIT_SSH_COMMAND="ssh -i $HOME/.ssh/deploy_key -o UserKnownHostsFile=$HOME/.ssh/known_hosts"

          CLONE_DIR=$(mktemp -d)
          git clone --bare --single-branch --depth 1 git@github.com:ocf/cluster.git $CLONE_DIR
          mv $CLONE_DIR _out/.git

          cd _out
          git config --bool core.bare false
          git config --bool push.autoSetupRemote true
          git config user.email ocfbot@ocf.berkeley.edu
          git config user.name ocfbot

          git add -A
          git commit -m "chore: rebuild cluster repository" -m "triggered by: ${{ inputs.module_name }}"
          git push
